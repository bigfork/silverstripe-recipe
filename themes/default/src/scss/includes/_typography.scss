/* Styles for HtmlEditorFields
---------------------------------------------------------------------------------- */

@use 'mixins';

/* Set base font size/family
---------------------------------------------------------------------------------- */
html {
	font-size: 62.5%;
}

:root {
	--font-family: arial, sans-serif;
}

body {
	color: black;
	font: var(--font-rg);
	-webkit-font-smoothing: antialiased;
}

/* Font sizes/gutters
---------------------------------------------------------------------------------- */
:root {
	--font-xs: 400 1.2rem / 1.4 var(--font-family);
	--font-xs-gutter: 1em 0 1.5em;
	--font-sm: 400 1.4rem / 1.4 var(--font-family);
	--font-sm-gutter: 1em 0 1.5em;
	--font-rg: 400 1.6rem / 1.4 var(--font-family);
	--font-rg-gutter: 1em 0 1.5em;
	--font-md: 400 1.8rem / 1.4 var(--font-family);
	--font-md-gutter: 0.75em 0 1.25em;
	--font-lg: 500 2.4rem / 1.2 var(--font-family);
	--font-lg-gutter: 1em 0 0.75em;
	--font-xl: 400 3rem / 1.2 var(--font-family);
	--font-xl-gutter: 0.75em 0 0.5em;
	--font-xxl: 400 3.6rem / 1.1 var(--font-family);
	--font-xxl-gutter: 0.6em 0 0.35em;
}

@media (min-width: 768px) {
	:root {
		--font-xs: 400 #{mixins.fluidFontSize((1.4rem, 768px), (1.6rem, 1280px))} / 1.4 var(--font-family);
		--font-sm: 400 #{mixins.fluidFontSize((1.4rem, 768px), (1.6rem, 1280px))} / 1.4 var(--font-family);
		--font-rg: 400 #{mixins.fluidFontSize((1.6rem, 768px), (2rem, 1280px))} / 1.4 var(--font-family);
		--font-md: 400 #{mixins.fluidFontSize((1.8rem, 768px), (2.4rem, 1280px))} / 1.2 var(--font-family);
		--font-lg: 500 #{mixins.fluidFontSize((2.4rem, 768px), (3.6rem, 1280px))} / 1.1 var(--font-family);
		--font-xl: 400 #{mixins.fluidFontSize((3rem, 768px), (4.2rem, 1280px))} / 1.1 var(--font-family);
		--font-xxl: 400 #{mixins.fluidFontSize((3.6rem, 768px), (5.4rem, 1280px))} / 1 var(--font-family);
	}
}

/* Default margins
---------------------------------------------------------------------------------- */
:where(h1) {
	margin: var(--font-xl-gutter);
	font: var(--font-xl);

	&:where(:first-child) {
		margin-top: 0;
	}

	&:where(:last-child) {
		margin-bottom: 0;
	}
}

:where(h2) {
	margin: var(--font-lg-gutter);
	font: var(--font-lg);

	&:where(:first-child) {
		margin-top: 0;
	}

	&:where(:last-child) {
		margin-bottom: 0;
	}
}

:where(h3) {
	margin: var(--font-md-gutter);
	font: var(--font-md);

	&:where(:first-child) {
		margin-top: 0;
	}

	&:where(:last-child) {
		margin-bottom: 0;
	}
}

:where(h4, h5, h6, p, ul, ol, blockquote) {
	margin: var(--font-rg-gutter);

	&:where(:first-child) {
		margin-top: 0;
	}

	&:where(:last-child) {
		margin-bottom: 0;
	}
}

/* Utility classes to apply font sizing
---------------------------------------------------------------------------------- */
:where(.font-xs) {
	margin: var(--font-xs-gutter);
	font: var(--font-xs);

	&:where(:first-child) {
		margin-top: 0;
	}

	&:where(:last-child) {
		margin-bottom: 0;
	}
}
:where(.font-sm) {
	margin: var(--font-sm-gutter);
	font: var(--font-sm);

	&:where(:first-child) {
		margin-top: 0;
	}

	&:where(:last-child) {
		margin-bottom: 0;
	}
}

:where(.font-rg) {
	margin: var(--font-rg-gutter);
	font: var(--font-rg);

	&:where(:first-child) {
		margin-top: 0;
	}

	&:where(:last-child) {
		margin-bottom: 0;
	}
}

:where(.font-md) {
	margin: var(--font-md-gutter);
	font: var(--font-md);

	&:where(:first-child) {
		margin-top: 0;
	}

	&:where(:last-child) {
		margin-bottom: 0;
	}
}

:where(.font-lg) {
	margin: var(--font-lg-gutter);
	font: var(--font-lg);

	&:where(:first-child) {
		margin-top: 0;
	}

	&:where(:last-child) {
		margin-bottom: 0;
	}
}

:where(.font-xl) {
	margin: var(--font-xl-gutter);
	font: var(--font-xl);

	&:where(:first-child) {
		margin-top: 0;
	}

	&:where(:last-child) {
		margin-bottom: 0;
	}
}

:where(.font-xxl) {
	margin: var(--font-xxl-gutter);
	font: var(--font-xxl);

	&:where(:first-child) {
		margin-top: 0;
	}

	&:where(:last-child) {
		margin-bottom: 0;
	}
}

/* Anchors
---------------------------------------------------------------------------------- */
:where(a) {
	color: currentColor;
}

:where(a:link),
:where(a:visited) {
	text-decoration: underline;
}

:where(a:hover),
:where(a:active) {
	text-decoration: none;
}

:where(a:focus-visible) {
	outline: solid 3px transparent;
	color: var(--black);
	background: yellow;
	box-shadow: 0 0 0 3px yellow;
}

/* Font weights/styles
---------------------------------------------------------------------------------- */
:where(strong) {
	font-weight: 600;
}

:where(em) {
	font-style: italic;
}

/* Subscript/superscript
---------------------------------------------------------------------------------- */
:where(sup),
:where(sub) {
	position: relative;
	top: -0.4em;
	font-size: 80%;
	vertical-align: baseline;
}

:where(sub) {
	top: 0.4em;
}

/* Lists
---------------------------------------------------------------------------------- */
:where(ul) {
	padding: 0 0 0 1.5em;
	list-style-type: disc;
}

:where(ol) {
	padding: 0 0 0 1.5em;
	list-style-type: decimal;
}

/* Blockquotes
---------------------------------------------------------------------------------- */
:where(blockquote) {
	margin: 0 0 1em;
	font-style: italic;
}

:where(blockquote p) {
	margin: 0;
}

:where(blockquote cite) {
	display: block;
	font-weight: bold;
	font-style: normal;
}

/* Horizontal rules
---------------------------------------------------------------------------------- */
:where(hr) {
	height: 0;
	margin: 2em 0;
	border: 0;
	border-top: solid 1px currentColor;
	opacity: 0.8;
	outline: none;
}

/* Tables
---------------------------------------------------------------------------------- */
:where(table) {
	margin-bottom: 1em;
	border-collapse: collapse;
	font-size: 1.5rem;
}

:where(th),
:where(td) {
	padding: 0.5em 0.75em;
	border: solid 1px var(--black);
	text-align: left;
}

:where(th) {
	font-weight: 700;
}

/* Image alignment
---------------------------------------------------------------------------------- */
:where(img.left),
:where(img.right),
:where(img.leftAlone),
:where(img.rightAlone),
:where(img.center) {
	display: block;
	float: none;
	margin: 0 auto 1em;
}

@media (min-width: 480px) {
	:where(img.left),
	:where(img.right),
	:where(img.leftAlone),
	:where(img.rightAlone),
	:where(img.center) {
		display: inline-block;
	}

	:where(img.left) {
		float: left;
		margin: 0 1em 0 0;
	}

	:where(img.right) {
		float: right;
		margin: 0 0 0 1em;
	}

	:where(img.leftAlone) {
		float: left;
		margin: 0 100% 1em 0;
	}

	:where(img.rightAlone) {
		float: right;
		margin: 0 0 1em 100%;
	}

	:where(img.left) {
		float: left;
		margin: 0 1em 0 0;
	}
}

/* Captioned images
---------------------------------------------------------------------------------- */
:where(.captionImage) {
	max-width: 100%;
	margin-bottom: 1em;
}

:where(.captionImage img) {
	margin-bottom: 0;
}

:where(.captionImage p) {
	margin: 0.25em 0;
	font-style: italic;
}

@media (min-width: 480px) {
	:where(.captionImage img) {
		float: none;
		margin: 0;
	}

	:where(.captionImage.left) {
		float: left;
		margin: 0 1em 1em 0;
	}

	:where(.captionImage.right) {
		float: right;
		margin: 0 0 1em 1em;
	}

	:where(.captionImage.center) {
		margin: 0 auto 1em;
	}
}

/* Embeds
---------------------------------------------------------------------------------- */
:where(.ss-htmleditorfield-file.embed) {
	max-width: 100%;
	height: auto;
}

:where(.ss-htmleditorfield-file.embed iframe) {
	width: 100%; height: 100%;
}
